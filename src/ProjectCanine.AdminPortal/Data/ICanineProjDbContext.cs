// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ProjectCanine.AdminPortal.Data
{
    using ProjectCanine.AdminPortal.Data.EfCfgs;
    using ProjectCanine.AdminPortal.Data.Entities;

    public interface ICanineProjDbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<CertificationType> CertificationTypes { get; set; } // CertificationTypes
        System.Data.Entity.DbSet<Dog> Dogs { get; set; } // Dogs
        System.Data.Entity.DbSet<EquipmentRestriction> EquipmentRestrictions { get; set; } // EquipmentRestrictions
        System.Data.Entity.DbSet<Examiner> Examiners { get; set; } // Examiners
        System.Data.Entity.DbSet<Handler> Handlers { get; set; } // Handlers
        System.Data.Entity.DbSet<Question> Questions { get; set; } // Questions
        System.Data.Entity.DbSet<Section> Sections { get; set; } // Sections
        System.Data.Entity.DbSet<Test> Tests { get; set; } // Tests
        System.Data.Entity.DbSet<TestResult> TestResults { get; set; } // TestResults
        System.Data.Entity.DbSet<TestResultsAnswer> TestResultsAnswers { get; set; } // TestResultsAnswers
        System.Data.Entity.DbSet<TestResultsSection> TestResultsSections { get; set; } // TestResultsSections

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

}
// </auto-generated>
